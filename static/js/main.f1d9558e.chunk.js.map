{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","setSelectedTabId","className","map","tab","id","title","isActive","some","item","cn","href","onClick","handleTabClick","find","content","App","useState","currentTab","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAKd,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cAEAC,GACI,EAFJC,iBAEI,EADJD,eAQA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACC,GACT,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACNC,GACFT,EAAKU,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,KAAON,MAAkBD,EAAK,KAAOM,GAC7DL,IAAkBK,EAAIC,GAEzB,OACE,oBAEE,UAAQ,MACRH,UAAWQ,IAAG,CAAE,YAAaH,IAH/B,SAKE,mBACE,UAAQ,UACRI,KAAI,WAAMN,GACVO,QAAS,kBAzBF,SAACR,GAClBA,EAAIC,KAAON,GACbC,EAAcI,GAuBaS,CAAeT,IAHhC,SAKGE,KATED,UAiBf,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,UACIJ,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAON,MAAkBD,EAAK,IAAIiB,cCtCpDjB,EAAO,CAClB,CAAEO,GAAI,QAASC,MAAO,QAASS,QAAS,eACxC,CAAEV,GAAI,QAASC,MAAO,QAASS,QAAS,eACxC,CAAEV,GAAI,QAASC,MAAO,QAASS,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASnB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBE,EAAtB,KAYA,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAON,KAAeO,SAGjE,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeA,EACfE,iBAAkBA,EAClBD,cApBgB,SAACkB,GACrB,IAAMC,EAAcrB,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAOa,EAAWb,MAKzDJ,EAHGkB,EAGcD,EAAWb,GAFXP,EAAK,GAAGO,WChB/Be,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f1d9558e.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  setSelectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabClick = (tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n            const isActive\n            = (!tabs.some(item => item.id === selectedTabId) && tabs[0] === tab)\n            || selectedTabId === tab.id;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={cn({ 'is-active': isActive })}\n              >\n                <a\n                  data-cy=\"TabLink\"\n                  href={`#${id}`}\n                  onClick={() => handleTabClick(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(tabs.find(tab => tab.id === selectedTabId) || tabs[0]).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (currentTab) => {\n    const selectedTab = tabs.find(tab => tab.id === currentTab.id);\n\n    if (!selectedTab) {\n      setSelectedTabId(tabs[0].id);\n    } else {\n      setSelectedTabId(currentTab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTabId).title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        setSelectedTabId={setSelectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}